#!/bin/sh
# NOTE: The contents of this file may assume that the shell is connected to a
# tty (unlike 'env') but shouldn't produce output. (use 'misc' for that)

# Fix for Debian
if command -v fdfind >/dev/null && ! command -v fd >/dev/null; then
    alias fd="fdfind"
fi

# Set up some defaults I like
alias colordiff="colordiff -u"
alias dmesg="dmesg -H"
alias ls="ls --color=auto -h -N"
alias dirs="dirs -v"
alias less="less -R"
alias vids="egrep '\.(flv|mp4|webm|avi|ogv|ogm|mkv|mov|rm|wmv)'"

# An accompaniment to dos2unix and unix2dos
alias mac2unix="tr '\r' '\n' "
alias unix2mac="tr '\n' '\r' "

# If I typed `gvim`, it can damn jolly well say what it wants in a new window
alias gvim="gvim &>/dev/null"

# Quick shortcut to open a file browser in the current directory without
# cluttering up the terminal with messages from it.
alias here="pcmanfm . &>/dev/null &"

# Make documentation browsing easier
alias info="pinfo"
kinfo() { konqueror info:/"$@" & }
kman() { konqueror man:"$@" & }

# {{{ Make Midnight Commander exit into the current directory if installed.

if [ -e "/usr/share/mc/bin/mc-wrapper.sh" ]; then
    alias mc=". /usr/share/mc/bin/mc-wrapper.sh -x"
elif [ -e "/usr/libexec/mc/mc-wrapper.sh" ]; then
    alias mc=". /usr/libexec/mc/mc-wrapper.sh -x"
else
    alias mc="mc -x"
fi
# }}}
# {{{ cond_alias* stuff

# A helper that makes an alias which is conditional on the lack of arguments.
cond_alias() {
    eval "function ${1}() { [ -z \"\$*\" ] && $2 || command $1 \"\$@\"; }"
}

# TODO: Rework things to remove this duplication
cond_alias_2() {
    eval "function ${1}() { [ -z \"\$*\" ] && $2 $3 $4 || command $2 \"\$@\" $4; }"
}

# Streamline my TYT-watching workflow
cond_alias_2 tytp "bed --no-log" "*"

# Workaround for GOG using the PayPal checkout flow that doesn't like my
# popup-whacking tweaks
cond_alias_2 gog_firefox "firefox --new-instance -P gog_purchases" "https://www.gog.com/"

cond_alias df pydf
cond_alias date "date --rfc-3339=seconds"
cond_alias top htop
cond_alias units "units -v"

# }}}
# {{{ Lazy-init `which`-dependent functions

# If github's "hub" wrapper is installed, hook it up, but don't let the `which`
# potentially bog down shell startup
git() {
    unset -f git
    if which hub >/dev/null 2>&1; then
        alias git=hub
        hub "$@"
    else
        git "$@"
    fi
}

download_ffn_fic() {
    if which download_ffn_fic >/dev/null 2>&1; then
        unset -f download_ffn_fic
        download_ffn_fic "$@"
    else
        if [ -e ~/src/fanfic2ebook ]; then
            PYTHONPATH=~/src/fanfic2ebook/src/ python -m fanfic2ebook -P fanfic2html "$@"
        fi
    fi
}

# Set up an OSD alias which will just work to the best of its ability.
osd() {
    unset -f osd
    if which aosd_cat >/dev/null 2>&1; then
        echo "BAR"
        osd() {
            echo "BOO"
            aosd_cat --font='Bitstream Vera Sans Bold 36' \
                --fade-in=300 --fade-out=300 "$@"
        }
    else
        osd() {
            echo "FOO"
            osd_cat --font '-*-*-*-r-*-*-*-390-*-*-*-*-*-*' \
                -p bottom -A left -o -75 -i 50 -c green "$@"
        }
    fi

    osd "$@"
}
# }}}
# {{{ lgogdownloader wrappers

# Alias for more comfortable gog downloader argv syntax
gogd() {
    local IFS=\|
    lgogdownloader --download --game "^($*)\$"
}
gogu() {
    local IFS=\|
    lgogdownloader --download --exclude=extras --game "^($*)\$"
}

lgogd() {
    local IFS=\|
    lgogdownloader --download --platform=linux --game "^($*)\$"
}
lgogu() {
    local IFS=\|
    lgogdownloader --download ----exclude=extras --platform=linux --game "^($*)\$"
}
# }}}
# {{{ youtube-dl wrappers

# Alias for my preferred settings for saving Young Turks vids
yt() { youtube-dl -f 44/35/43/18/34 -r300k "$@"; }

# Alias for grabbing The Cinema Snob and Brad Tries episodes
getsnob() {
    local TARGET="$1"
    shift
    mkdir -p "$TARGET"
    pushd "$TARGET"
    for X in "$@"; do
        # Grab the SD file for eventual fservroot use
        youtube-dl -f 43 "$X"
    done
    for X in "$@"; do
        # Grab the HD file for archival
        youtube-dl "$X"
    done
    popd
}
tcs() { getsnob ~"/incoming/Videos/The Cinema Snob" "$@"; }
bradtries() { getsnob ~"/incoming/Videos/Brad Tries" "$@"; }
# }}}
# {{{ pngcomp wrappers

pngcomp() {
    for X in "$@"; do
        pngcrush -ow -rem gAMA -rem alla -rem cHRM -rem iCCP -rem sRGB -rem time "$X" | egrep -v '^[ \|]\|'
    done
    optipng -clobber -- "$@"
    advpng -z4 "$@"
}
pngcomp_brute() {
    for X in "$@"; do
        pngcrush -ow -rem gAMA -rem alla -rem cHRM -rem iCCP -rem sRGB -rem time "$X" | egrep '(Best pngcrush method|no filesize change|% filesize reduction)'
    done
    optipng -clobber -o7 -zm1-9 -- "$@" | egrep '(\*\* Processing|% decrease|is already optimized)'
    advpng -z4 "$@"
    advpng -z3 "$@" | fgrep -v '100%'
    advpng -z2 "$@" | fgrep -v '100%'
    advpng -z1 "$@" | fgrep -v '100%'
}
# }}}

# Launch man with modified `less` termcap in subshell to colourize it
man() { (
    export LESS_TERMCAP_mb=$(
        tput bold
        tput setaf 2
    )
    export LESS_TERMCAP_md=$(tput setaf 6)
    export LESS_TERMCAP_me=$(tput sgr0)
    export LESS_TERMCAP_so=$(
        tput setaf 7
        tput setab 4
    )
    export LESS_TERMCAP_se=$(
        tput rmso
        tput sgr0
    )
    export LESS_TERMCAP_us=$(
        tput smul
        tput setaf 7
    )
    export LESS_TERMCAP_ue=$(
        tput rmul
        tput sgr0
    )
    export LESS_TERMCAP_mr=$(tput rev)
    export LESS_TERMCAP_mh=$(tput dim)
    export LESS_TERMCAP_ZN=$(tput ssubm)
    export LESS_TERMCAP_ZV=$(tput rsubm)
    export LESS_TERMCAP_ZO=$(tput ssupm)
    export LESS_TERMCAP_ZW=$(tput rsupm)
    export GROFF_NO_SGR=1 # For Konsole and Gnome-terminal
    command man "$@"
); }

# Get rid of the annoying "nohup.out" files.
# (Why couldn't they have a --logoutput option and no-logging default instead?)
nohup() { command nohup "$@" >/dev/null & }

# Given an egrep path filter, use git filter-branch to throw out all files
# which don't match.
git_filter_whitelist() {
    # Filter out content and newly emptied non-merge, non-root commits
    # Source: http://stackoverflow.com/a/6006679
    #shellcheck disable=SC1004,SC2016
    command git filter-branch --prune-empty --index-filter '
	    git ls-tree -zr --name-only --full-tree $GIT_COMMIT \
	    | egrep -vz "'"$1"'" \
	    | xargs -0 git rm --cached -r
	' -- --all

    # Collapse away vestigial merge and root commits ignored by --prune-empty
    # Source: My own accidental discovery
    command git rebase --root HEAD
}

# Nicer alternative to piping a gunzipped file into lynx
wo() {
    TMPFILE="$(mktemp --suffix=.html)"
    command gunzip <"$@" >"$TMPFILE"
    "$BROWSER" "$TMPFILE"
    (
        sleep 5
        rm "$TMPFILE"
    ) &
}

# Colorized wdiff
cwdiff() {
    if which dwdiff >/dev/null 2>&1; then
        dwdiff -R "$@" | command colordiff
    else
        wdiff -n "$@" | command colordiff
    fi
}

# Miscellaneous quick features
mp3ck() {
    mpck -B "$@"
    mp3check -e3STBEG "$@"
}

# vim: set foldmethod=marker :
