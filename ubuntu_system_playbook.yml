---
# TODO for 'setup ansible' shell script:
# - Install aptitude and python-apt or python3-apt for the `apt` module

- hosts: localhost
  connection: local

  vars:
    # TODO: Try these Flatpak apps:
    # - https://flathub.org/apps/details/com.gitlab.JakobDev.jdAppdataEdit
    # - https://flathub.org/apps/details/vn.hoabinh.quan.CoBang
    # - https://flathub.org/apps/details/org.dust3d.dust3d
    # - https://flathub.org/apps/details/org.jamovi.jamovi
    # - https://flathub.org/apps/details/net.sf.VICE
    # - https://flathub.org/apps/details/net.sourceforge.fretsonfire
    # - https://flathub.org/apps/details/com.corsixth.corsixth
    # - https://flathub.org/apps/details/org.opensurge2d.OpenSurge
    # - https://flathub.org/apps/details/org.naev.Naev
    # - https://flathub.org/apps/details/org.openmw.OpenMW
    # - https://flathub.org/apps/details/com.github.bvschaik.julius
    # - https://flathub.org/apps/details/net.openra.OpenRA
    # - https://flathub.org/apps/details/org.freeorion.FreeOrion
    # - https://flathub.org/apps/details/io.gitlab.construo.construo
    # - https://flathub.org/apps/details/io.openrct2.OpenRCT2
    # - https://flathub.org/apps/details/org.widelands.Widelands
    # - https://flathub.org/apps/details/org.wesnoth.Wesnoth
    # - https://flathub.org/apps/details/com.play0ad.zeroad
    # - https://flathub.org/apps/details/org.upnproutercontrol.UPnPRouterControl
    # - https://flathub.org/apps/details/io.github.cloose.CuteMarkEd
    # - https://flathub.org/apps/details/io.github.leonardschardijn.Chirurgien
    # - https://flathub.org/apps/details/io.gitlab.evtest_qt.evtest_qt
    # - https://flathub.org/apps/details/org.freefilesync.FreeFileSync
    # - https://flathub.org/apps/details/com.georgefb.quickaccess
    # - https://flathub.org/apps/details/fyi.zoey.Boop-GTK
    # - https://flathub.org/apps/details/com.giuspen.cherrytree
    # - https://flathub.org/apps/details/com.github.debauchee.barrier
    #
    # TODO: Explore running these via wax for sandboxing-by-default operation:
    # - https://wapm.io/package/optipng
    # - https://wapm.io/package/sqlite
    apt_install:
      # --== Dependencies for other parts of this playbook ==--
      - aptitude
      - apt-file
      - build-essential
      - clang # for cargo-afl
      - gamemode
      - git # shell alias
      - git-gui # file manager action
      - llvm # for cargo-afl
      - nodejs
      - npm
      - pipx # TODO: Actually install things through pipx
      - libssl-dev # Needed for the user playbook
      - libvulkan1 # DXVK
      - libvulkan-dev # DXVK
      - python-apt
      - python3-apt
      - vulkan-utils # DXVK
      # --== Waiting for Flatpak release to get issues resolved ==--
      - ark # Need folder picker portal support from 22.04 LTS. Also #17
      - evince
      - geeqie # Waiting for a fix to the broken theming
      - gimp
      - keepassxc # Not Flatpak: I'm waiting for it to become official
      - libpurple-bin
      - libreoffice
      - libreoffice-nlpsolver
      - libreoffice-wiki-publisher
      - libreoffice-writer2latex
      - libreoffice-writer2xhtml
      - pidgin # NOTE: Flatpak doesn't have needed plugins
      - pidgin-bot-sentry
      - pidgin-otr
      - pidgin-plugin-pack
      # --== No Flatpak release last I checked ==--
      - basket # TODO: Firejail
      - mcomix # TODO: Firejail
      - ddrescueview
      - filelight
      - guvcview
      - k3b
      - kcolorchooser
      - kdiff3
      - kruler
      - krename
      - lyx
      - mednafen
      - qttools5-dev-tools # qdbusviewer
      - retext
      - sigil
      - tellico
      - virtualbox
      - virtualbox-guest-additions-iso
      - workrave
      - xkeycaps
      - xpad
      - xsane
      # https://moritzmolch.com/apps/mencfsm.html
      - encfs
      - libxkbcommon-x11-0
      # --== bed ==--
      - libmpv1
      - python3-pytimeparse
      # --== bedtime notifier ==--
      - python3-notify2
      - python3-schedule
      - python3-xcffib
      # --== manga translating helper ==--
      - tesseract-ocr
      - tesseract-ocr-chi-sim
      - tesseract-ocr-chi-sim-vert
      - tesseract-ocr-chi-tra
      - tesseract-ocr-chi-tra-vert
      - tesseract-ocr-jpn
      - tesseract-ocr-jpn-vert
      - tesseract-ocr-kor
      - tesseract-ocr-kor-vert
      # --== QuickTile ==--
      - gir1.2-glib-2.0
      - gir1.2-gtk-3.0
      - gir1.2-wnck-3.0
      - python3-gi
      - python3-xlib
      # --== Vim with ALE ==--
      - ansible-lint
      - cppcheck
      - eslint
      - flawfinder
      - jsonlint
      - php-codesniffer
      - pydocstyle
      - pylint
      - python3-autopep8
      - python3-bandit
      - python3-flake8
      - python3-isort
      - shellcheck
      - sqlformat
      - uglifyjs
      - valgrind
      - vim-doc
      - vim-gtk # shell alias
      - vulture
      - yamllint
      # --== Infra./used in scripts/term (not suitable for flatpak) ==--
      - advancecomp # shell alias
      - aosd-cat # shell alias
      - arduino-mk
      - arj # balloon_cd.py
      - bottlerocket # xbindkeys, fan_remote
      - checkinstall
      - cifs-utils
      - colordiff # shell alias
      - colortest
      - curl
      - dhex
      - doxygen
      - doxygen-latex
      - dvdisaster
      - expect
      - fbi # ~/bin/gqfbi
      - featherpad
      - festival
      - fonts-tlwg-typewriter-otf # Some Inkscape SVGs
      - fortune-mod
      - fuseiso
      - gaffitter
      - gdb
      - gddrescue
      - graphviz
      - grip
      - gtk3-nocsd
      - hddtemp
      - htop # shell alias
      - hub # shell alias
      - imagemagick
      - incron
      - innoextract
      - iotop
      - irssi
      - jekyll
      - jlha-utils # balloon_cd.py
      - jpegoptim
      - latencytop
      - lzip # balloon_cd.py
      - kcachegrind-converters # For the Flatpak
      - less # pager, manpager, shell alias
      - lgogdownloader # shell alias
      - libasound2-dev # cpal for rust-ttspico projects
      - libnotify-bin
      - links
      - links2
      - linux-tools-common
      - linux-tools-generic
      - lm-sensors
      - lynx
      - makeself
      - mc # shell alias
      - mercurial
      - molly-guard
      - mp3check # shell alias
      - mutt
      - ncdu
      - net-tools
      - node-typescript
      - normalize-audio
      - numlockx
      - openssh-server
      - optipng # shell alias
      - p7zip-full
      - p7zip-rar
      - pandoc
      - pandoc-citeproc
      - par2
      - phantomjs # yt-dlp
      - pinfo # shell alias
      - pipenv
      - pngcrush # shell alias
      - postgresql
      - pv
      - pydf # shell alias
      - rdiff-backup
      - rename
      - safecopy
      - screen
      - scrot
      - smem
      - sox
      - sqlite3
      - sshfs
      - taskwarrior # TODO: Remove the need for this
      - tig
      - timelimit
      - timidity
      - ttf-mscorefonts-installer
      - tox
      - ufw
      - units # shell alias
      - unrar
      - uptimed
      - upx
      - vbindiff
      - virtualenvwrapper # TODO: migrate projects to pipenv
      - wdiff # shell alias
      - whois
      - wmctrl
      - xautomation
      - xbindkeys
      - xclip
      - xdotool
      - xpra
      - xserver-xephyr
      - xvfb
      - youtube-dl # TODO: Do I still need this?  # TODO: Firejail yt-dlp
      # --== Infrastructural Packages (not suitable for flatpak) ==--
      - apache2
      - conky-all
      - elementary-icon-theme
      - gmrun
      - gpm
      - konq-plugins
      - konqueror # shell alias
      - mypy
      - pavucontrol
      - pcmanfm # default file manager and shell alias
      - pypy
      - python-dbus # active_corners, lap, lgogd_uri, timeclock
      - python-dev
      - python-lxml # addventure_tools, fanfic2ebook, ffcms, ficfan
      - python-nose
      - python-psutil # rdbackup_wrapper
      - python-setuptools
      - python-tz # ffcms
      - python-yaml # addventure_tools, ffcms, ficfan, todo_list
      - python3
      - python3-coverage
      - python3-dbus
      - python3-doc
      - python3-examples
      - python3-lxml
      - python3-mypy
      - python3-nose
      - python3-pil
      - python3-pip
      - python3-setuptools
      - python3-sphinx
      - python3-sphinx-autodoc-typehints
      - python3-tasklib # tw-daily.py
      - python3-tidylib # Required to pull in .so dependencies for virtualenvs
      - python3-tzlocal
      - python3-usb # escpos-cli?
      - python3-yaml # dos_installer
      - python3.8
      - ruby
      - rxvt-unicode
      - ssh-askpass-gnome
      - tango-icon-theme
      - texlive-xetex
      - ttf-mscorefonts-installer
      - virtualenv
      - yakuake
      - zram-config
      - zsh
      - zsh-doc
    apt_remove:
      - ace-of-penguins
      - appmenu-*
      - elisa
      - firefox # Installed via Flatpak for more sandboxing
      - gpicview
      - gnome-exe-thumbnailer
      - gnumeric
      - gnumeric-common
      - gwenview
      - indicator-applet-appmenu
      - indicator-appmenu
      - kate
      - kcalc
      - kmahjongg
      - kmines
      - konversation
      - kpat
      - ksudoku
      - ktorrent
      - liboverlay-scrollbar
      - light-locker
      - mtpaint
      - modemmanager
      - plasma-browser-integration # 100% CPU: WebScrapbook->kactivitymanager
      - qlipper
      - skanlite
      - sylpheed
      - thunderbird # Installed via Flatpak for more sandboxing
      - transmission*
      - unity-gtk2-module
      - unity-gtk3-module
      - vlc
    flatpak_install:
      - cc.arduino.arduinoide
      - com.calibre_ebook.calibre
      - com.dosbox.DOSBox
      - com.github.Eloston.UngoogledChromium
      - com.github.libresprite.LibreSprite
      - com.github.micahflee.torbrowser-launcher
      - com.github.tchx84.Flatseal
      - com.orama_interactive.Pixelorama
      - fr.handbrake.ghb
      - io.github.antimicrox.antimicrox
      - io.gitlab.jstest_gtk.jstest_gtk
      - io.mpv.Mpv
      - org.atheme.audacious
      - org.blender.Blender
      - org.deluge_torrent.deluge
      - org.freedesktop.Bustle
      - org.gnome.EasyTAG
      - org.gnome.glabels-3
      - org.godotengine.Godot
      - org.gottcode.FocusWriter
      - org.inkscape.Inkscape
      - org.jdownloader.JDownloader
      - org.kde.kcachegrind
      - org.kde.okteta
      - org.kde.okular
      - org.mozilla.firefox
      - org.mozilla.Thunderbird
      - org.phoenicis.playonlinux
      - org.zealdocs.Zeal
    npm_global_cmds: # TODO: Rework to use npx and then write nodo and use that
      # Dependencies for ALE save/format-on-check
      prettier: /usr/bin/prettier
      stylelint-config-recommended: /usr/bin/stylelint
      stylelint: /usr/bin/stylelint
    py3_requirements: # TODO: Use pipx and then write nodo and use that
      - restview
      # Dependencies for ALE save/format-on-check
      - rstcheck
      - vim-vint
    ruby_gems: # TODO: write nodo and use that
      - travis-lint
      - mdl
    samba_family_users:
      - andre
      - beverly
      - nick
      - "{{ my_username }}"

  tasks:
    # ============================== Safety Checks ============================
    - name: Abort if we are running as root
      fail:
        msg: "This playbook must be run as root"
      when: ansible_user_uid != 0

    # =================== Remove Unwanted Preloaded Applications ==============
    # (before potentially wasting bandwidth on them with dist-upgrade)
    - name: Purge undesired Lubuntu/Kubuntu/Ubuntu package preloads
      apt:
        state: absent
        purge: true
        autoremove: true
        name: "{{ apt_remove }}"

    - name: Copy dummy ubuntu-advantage-tools to package cache
      copy:
        src: ubuntu-advantage-tools_9999_all.deb
        dest: /var/cache/apt/archives/ubuntu-advantage-tools_9999_all.deb
      check_mode: false # Needed to get useful --check out of next task

    - name: Install dummy ubuntu-advantage-tools
      apt:
        allow_unauthenticated: true
        autoremove: true
        deb: /var/cache/apt/archives/ubuntu-advantage-tools_9999_all.deb

    # Remove snaps and block Canonical from slipping them back in
    # TODO: Finish implementing this
    - include: tasks/no_snaps.yml

    # ============================= Configure APT =============================
    - name: "Ensure universe and multiverse are enabled"
      apt_repository:
        repo: >-
          {{ item[0] }}
          http://ca.archive.ubuntu.com/ubuntu/
          {{ansible_distribution_release}}{{ item[1] }}
          {{ item[2] }}
        update_cache: false # I'll do it just once later
      when: ansible_distribution == 'Ubuntu'
      with_nested:
        - ["deb", "deb-src"]
        - ["", "-updates"]
        - ["universe", "multiverse"]

    - name: "Ensure universe and multiverse security updates are enabled"
      apt_repository:
        repo: >-
          {{ item[0] }}
          http://security.ubuntu.com/ubuntu
          {{ansible_distribution_release}}-security
          {{ item[1] }}
        update_cache: false # I'll do it just once later
      when: ansible_distribution == 'Ubuntu'
      with_nested:
        - ["deb", "deb-src"]
        - ["universe", "multiverse"]

    - name: Check for i386 support
      command: dpkg --print-foreign-architectures
      check_mode: false
      changed_when: false
      register: dpkgforeign

    - name: Enable multiarch (i386)
      command: dpkg --add-architecture i386
      changed_when: "'i386' not in dpkgforeign.stdout"

    - name: Add PPAs
      apt_repository:
        repo: "{{ item }}"
        update_cache: false # I'll do it just once later
      with_items:
        - "ppa:deadsnakes/ppa" # Various Python version for tox
        - "ppa:flatpak/stable" # Keep Flatpak up to date on Ubuntu
      tags:
        - flatpak

    - include: tasks/gcdemu_repo.yml

    # =========================== Update & Upgrade ============================
    - name: Update the package repository cache
      apt:
        update_cache: true
        cache_valid_time: 86400 # 24 hours
      tags:
        - flatpak

    - name: Update all packages to the latest version
      apt:
        upgrade: dist
      tags:
        - flatpak

    # ====================== Install Preferred Packages =======================

    - name: "Accept mscorefonts license"
      debconf:
        name: ttf-mscorefonts-installer
        question: msttcorefonts/accepted-mscorefonts-eula
        value: "true"
        vtype: select

    - name: Install packages available through APT
      apt:
        state: present
        name: "{{ apt_install }}"

    # TODO: Install youtube-dl from the upstream source, with
    #       signature verification. (The PPA-provided versions have fatally
    #       flawed support for updating in one way or another.)
    #
    # TODO: Decide which of these should get their own taskfiles
    - name: Install packages from 3rd-party repos
      apt:
        state: present
        name:
          # TODO: Move these to a tasks/deadsnakes.yml
          - python3.6
          - python3.7
          - python3.8
          - python3.9
          - python3.10

    # REMINDER: Use of the `pip` module must come after `apt` installing pip.
    #
    # TODO: Use pipx
    #- name: Install desired Python 3 packages
    #  pip:
    #    executable: pip3
    #    name: "{{ py3_requirements | join(' ') }}"
    - name: Install desired ruby gems
      gem:
        name: "{{ item }}"
        user_install: false
      with_items: "{{ ruby_gems }}"

    # TODO: Use npx
    #- name: Install desired global npm packages
    #  command: npm install -g -- {{ item.key | quote }} # 'npm' is too slow
    #  args:
    #    creates: "{{ item.value }}" # ...and 'command' would be too
    #  with_dict: "{{ npm_global_cmds }}"

    - include: tasks/earlyoom.yml
    - include: tasks/smartd.yml
    - include: tasks/stunnel.yml
    - include: tasks/no_floppy.yml # Keep 'Floppy Drive' out of 'Places' menu
    - include: tasks/hddtemp.yml # Unprivileged querying of HDD temper.
    - include: tasks/planetfilter.yml # RSS/Atom feed filtering
    - include: tasks/gcdemu.yml # Non-ISO CD/DVD image mounting
    - include: tasks/ufw.yml # Basic firewall setup with exceptions
    - include: tasks/hosts_file.yml # Basic system-wide ad-blocking
    - include: tasks/firejail.yml # Enable sandboxing for non-Flatpak apps
    - include: tasks/u2f.yml # Set up for password+U2F system auth

    # ======================= Install Flatpak Packages ========================

    - name: Install Flatpak
      apt:
        state: present
        name:
          - flatpak
          - plasma-discover-backend-flatpak
      tags:
        - flatpak

    - name: Add flathub as a remote
      community.general.flatpak_remote:
        name: flathub
        state: present
        flatpakrepo_url: https://flathub.org/repo/flathub.flatpakrepo
      tags:
        - flatpak

    - name: Install packages available through flathub
      community.general.flatpak:
        state: present
        name: "{{ flatpak_install }}"
      tags:
        - flatpak

    # ====================== Apply General Config Fixes =======================

    - include: tasks/verbose_boot.yml # Boot splashes hinder diagnostics
    - include: tasks/sysctl_networking.yml # Improve security and bufferbloat

    - name: "Disable ads in Ubuntu login MOTD"
      copy:
        src: "etc/default/motd-news"
        dest: "/etc/default/motd-news"
        owner: root
        group: root
        mode: 0644

    - name: "Apply udev policy fixes for various pieces of hardware"
      copy:
        src: "etc/udev/rules.d/"
        dest: "/etc/udev/rules.d/"
        owner: root
        group: root
        mode: 0644

    - name: "Enable magic SysRq key"
      copy:
        src: "etc/sysctl.d/10-magic-sysrq.conf"
        dest: "/etc/sysctl.d/10-magic-sysrq.conf"
        owner: root
        group: root
        mode: 0644

    - name: "Make custom update_check.sh passwordless"
      copy:
        src: "etc/sudoers.d/update_checker"
        dest: "/etc/sudoers.d/update_checker"
        owner: root
        group: root
        mode: 0440

    - name: "Set up lm_sensors" # noqa 306
      shell: "yes | sensors-detect"
      args:
        creates: /etc/sensors3.conf

    - name: "Linking virtualbox to virtualbox-ose for old VM snapshot CD paths"
      file:
        src: virtualbox
        dest: /usr/share/virtualbox-ose
        state: link

    - name: "Create 'family' group"
      group:
        name: family
        state: present

    - name: "Change login shell to zsh for {{ my_username }} and add groups"
      user:
        name: "{{ my_username }}"
        append: true
        groups: tty,dialout,video,lpadmin,vboxusers,family,floppy
        shell: /bin/zsh

    - name: "Add {{ my_username }} to incron allowed users"
      lineinfile:
        path: /etc/incron.allow
        line: "{{ my_username }}"
        create: true

    # ================== Install monolith-specific Packages ===================

    - include: tasks/wine.yml # Wine and PlayOnLinux, with 16-bit support
      when: ansible_hostname == my_hostname

    # ---- Network Services

    - include: tasks/samba.yml # media server and file drop box
      when: ansible_hostname == my_hostname

    - include: tasks/nostalgia_exchange.yml # Munin master and monitoring node
      when: ansible_hostname == my_hostname

    - include: tasks/router_syslog.yml # Enable reception of router syslog
      when: ansible_hostname == my_hostname

    # ---- Hardware Drivers

    - include: tasks/lcdproc.yml # front-panel diagnostic LCD
      when: ansible_hostname == my_hostname

    - include: tasks/spacenavd.yml # 3D Connexion Space Navigator driver
      when: ansible_hostname == my_hostname

    - include: tasks/truerng.yml # TrueRNG hardware RNG driver
      when: ansible_hostname == my_hostname

    - include: tasks/nvidia_config.yml # Driver and config for my TwinView
      when: ansible_hostname == my_hostname

    - name: Re-purge any undesired preloads that might have been suggested in
      apt:
        state: absent
        purge: true
        autoremove: true
        name: "{{ apt_remove }}"
# ==================== Apply monolith-specific Config =====================
